import streamlit as st
from api.shopee_api import get_top_selling_items
from services.shopee_auth import call_shopee_api_auto,check_shop_type
 # FUJIKA Official shop_id
TOP_N_ITEMS = 5         # ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏ó‡∏µ‡πà‡∏à‡∏∞‡πÅ‡∏™‡∏î‡∏á
REVIEWS_PER_ITEM = 5    # ‡∏£‡∏µ‡∏ß‡∏¥‡∏ß‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î‡∏ï‡πà‡∏≠‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤
SS_SHOP_ID = 57360480
def app():
    if "role" not in st.session_state or st.session_state["role"] != "shopee_test":
        st.error("‚õî ‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡πÄ‡∏Ç‡πâ‡∏≤‡∏ñ‡∏∂‡∏á‡∏´‡∏ô‡πâ‡∏≤‡∏ô‡∏µ‡πâ")
        st.stop()

    st.title("üõí Shopee Test Dashboard")
    top_n = 5

    with st.spinner("‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å Shopee..."):
        try:
            # -------------------- 1. ‡∏î‡∏∂‡∏á‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏Ç‡∏≤‡∏¢‡∏î‡∏µ --------------------
            resp_items = call_shopee_api_auto(
                "/api/v2/product/get_item_list",
                SS_SHOP_ID,
                params={"pagination_offset": 0, "pagination_entries_per_page": TOP_N_ITEMS}
            )

            items = resp_items.get("response", {}).get("item", [])

            if not items:
                st.warning("‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÉ‡∏ô‡∏£‡πâ‡∏≤‡∏ô‡∏ô‡∏µ‡πâ (‡∏•‡∏≠‡∏á‡πÄ‡∏ä‡πá‡∏Ñ‡∏ß‡πà‡∏≤‡∏°‡∏µ‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏Ç‡∏≤‡∏¢‡∏≠‡∏¢‡∏π‡πà‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà)")
            else:
                st.success(f"‡∏û‡∏ö‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤ {len(items)} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£")

                # -------------------- 2. ‡∏î‡∏∂‡∏á‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤ --------------------
                item_ids = [str(i["item_id"]) for i in items]
                resp_detail = call_shopee_api_auto(
                    "/api/v2/product/get_item_base_info",
                    SS_SHOP_ID,
                    params={"item_id_list": ",".join(item_ids)}
                )
                item_details = resp_detail.get("response", {}).get("item_list", [])

                # -------------------- 3. ‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡πÉ‡∏ô Streamlit --------------------
                for idx, item in enumerate(item_details, start=1):
                    st.subheader(f"{idx}. {item.get('item_name', 'N/A')}")
                    st.write(f"‚úÖ ‡∏¢‡∏≠‡∏î‡∏Ç‡∏≤‡∏¢‡∏£‡∏ß‡∏°: {item.get('historical_sold', 0)}")
                    st.write(f"üí∞ ‡∏£‡∏≤‡∏Ñ‡∏≤‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô: {item.get('price', 'N/A')}")

                    # -------------------- 4. ‡∏î‡∏∂‡∏á‡∏£‡∏µ‡∏ß‡∏¥‡∏ß‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î --------------------
                    resp_reviews = call_shopee_api_auto(
                        "/api/v2/item/get_ratings",
                        SS_SHOP_ID,
                        params={"item_id": item["item_id"], "offset": 0, "page_size": REVIEWS_PER_ITEM}
                    )

                    reviews = resp_reviews.get("response", {}).get("item_rating", {}).get("rating_list", [])
                    if reviews:
                        st.write("üìù ‡∏£‡∏µ‡∏ß‡∏¥‡∏ß‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î:")
                        for r in reviews:
                            st.write(f"- ‚≠ê {r.get('rating_star')} : {r.get('comment')}")
                    else:
                        st.write("‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏£‡∏µ‡∏ß‡∏¥‡∏ß‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏ô‡∏µ‡πâ")

        except Exception as e:
            st.error(f"‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: {e}")
        
        shop_info = check_shop_type(SS_SHOP_ID)
        st.write("Shop info:", shop_info)
        if shop_info.get("is_sip"):
            st.success("‡∏£‡πâ‡∏≤‡∏ô‡∏ô‡∏µ‡πâ‡πÄ‡∏õ‡πá‡∏ô Shopee Partner")
        else:
            st.info("‡∏£‡πâ‡∏≤‡∏ô‡∏ô‡∏µ‡πâ‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà Shopee Partner")