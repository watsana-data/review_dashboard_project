import streamlit as st
from api.shopee_api import get_top_selling_items
from services.shopee_auth import call_shopee_api_auto
from utils.config import SS_SHOP_ID
def app():
    if "role" not in st.session_state or st.session_state["role"] != "shopee_test":
        st.error("‚õî ‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡πÄ‡∏Ç‡πâ‡∏≤‡∏ñ‡∏∂‡∏á‡∏´‡∏ô‡πâ‡∏≤‡∏ô‡∏µ‡πâ")
        st.stop()

    st.title("üõí Shopee Test Dashboard")
    top_n = 10  # ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÅ‡∏™‡∏î‡∏á

    with st.spinner("‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å Shopee..."):
        try:
            # ‡∏î‡∏∂‡∏á‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏Ç‡∏≤‡∏¢‡∏î‡∏µ
            top_items = get_top_selling_items(shop_id=SS_SHOP_ID, limit=top_n)
            st.write("Debug top_items:", top_items) 
            for idx, item in enumerate(top_items, start=1):
                st.subheader(f"{idx}. {item['name']}")
                st.write(f"‡∏¢‡∏≠‡∏î‡∏Ç‡∏≤‡∏¢‡∏£‡∏ß‡∏°: {item.get('historical_sold', 0)}")

                # ‡∏î‡∏∂‡∏á‡∏£‡∏µ‡∏ß‡∏¥‡∏ß‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î 5 ‡∏£‡∏µ‡∏ß‡∏¥‡∏ß
                path_review = "/api/v2/shop/product/review/get"
                params_review = {
                    "item_id": item["item_id"],
                    "pagination_offset": 0,
                    "pagination_entries_per_page": 5
                }
                reviews_resp = call_shopee_api_auto(path_review, SS_SHOP_ID, params_review)
                reviews = reviews_resp.get("reviews", [])
                if reviews:
                    st.write("‡∏£‡∏µ‡∏ß‡∏¥‡∏ß‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î:")
                    for r in reviews:
                        st.write(f"- ‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô: {r.get('rating')}, ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Ñ‡∏¥‡∏î‡πÄ‡∏´‡πá‡∏ô: {r.get('comment')}")
                else:
                    st.write("‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏£‡∏µ‡∏ß‡∏¥‡∏ß")

        except Exception as e:
            st.error(f"‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: {e}")